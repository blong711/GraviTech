<!-- sections/main-password-header.liquid -->

{%- style -%}
    .hdt-password-logo {
      max-width: {{ section.settings.logo_width }}px;
    }

    .hdt-password-header {
      padding: 3rem 0; display: flex;
      justify-content: space-between;
      align-items: center;
      flex-direction: column;
      color: rgb(var(--color-foreground));
      max-width: var(--page-width);
      margin: 0 auto;
      text-align: center;
      gap:1rem; }

      .hdt-password-modal{ text-underline-offset: 0.3rem; text-decoration-thickness: 0.1rem; transition: text-decoration-thickness ease .1s; text-decoration: underline; grid-column: 3; } .hdt-password-modal svg{ width: 1.8rem; height: 1.8rem; margin-inline-end: 1rem; } .hdt-modal-password input.hdt-input{ padding: 1.55rem 1.8rem; border: 0.1rem solid rgb(var(--color-input-secondary)); color:rgb(var(--color-input-secondary)); background-color: rgb(var(--color-input-primary));; line-height: normal; resize: none; transition: border-color .1s ease-in-out; --height-input: var(--spacing-5); outline: none; } .hdt-modal-password .hdt-input::placeholder { opacity: 0; } .hdt-modal-password .hdt-field label{ left: 1.8rem; transform: scale(1); transform-origin: left top; transition: transform .2s ease-in-out; height:100%; color: rgb(var(--color-input-secondary)); } .hdt-modal-password .hdt-field label .hdt-required{margin-inline-start: 0.5rem;} .hdt-modal-password .hdt-field input:-webkit-autofill~label, .hdt-modal-password .hdt-field input:focus~label, .hdt-modal-password .hdt-field input:not(:placeholder-shown)~label { transform: translateY(-0.6rem) scale(.8); } .hdt-modal-password .hdt-field input:-webkit-autofill, .hdt-modal-password .hdt-field input:focus, .hdt-modal-password .hdt-field input:not(:placeholder-shown) { padding: 2.5rem 1.8rem 0.6rem; } .hdt-modal-password input.hdt-input{ padding: 1.55rem 1.8rem; border: 0.1rem solid rgb(var(--color-input-secondary)); color:rgb(var(--color-input-secondary)); background-color: rgb(var(--color-input-primary));; line-height: normal; resize: none; transition: border-color .1s ease-in-out; --height-input: var(--spacing-5); outline: none; } .hdt-modal-password .hdt-input::placeholder { opacity: 0; } .hdt-modal-password .hdt-select{ --height-input: var(--spacing-5); } .hdt-modal-password .hdt-field label{ left: 1.8rem; transform: scale(1); transform-origin: left top; transition: transform .2s ease-in-out; height:100%; color: rgb(var(--color-input-secondary)); } .hdt-modal-password .hdt-field label .hdt-required{margin-inline-start: 0.5rem;} .hdt-modal-password .hdt-field input:-webkit-autofill~label, .hdt-modal-password .hdt-field input:focus~label, .hdt-modal-password .hdt-field input:not(:placeholder-shown)~label { transform: translateY(-0.6rem) scale(.8); } .hdt-modal-password .hdt-field input:-webkit-autofill, .hdt-modal-password .hdt-field input:focus, .hdt-modal-password .hdt-field input:not(:placeholder-shown) { padding: 2.5rem 1.8rem 0.6rem; } .hdt-modal-password::part(content) { max-width: 62.5rem; max-height: 80vh; width: 100%; border-radius: var(--rounded-input); } .hdt-modal-password::part(header) { display: flex; align-items: center; justify-content: space-between; margin-bottom: 2.6rem; } .hdt-modal-password::part(close-button) { background-color: transparent; transition: color .3s ease; color: rgb(var(--color-foreground)); outline: none; border: none; cursor: pointer; } .hdt-modal-password::part(body) {padding:0} @media(min-width: 768px){ .hdt-password-header { display: grid; gap: 3rem; grid-template-columns: 1fr 1.5fr 1fr; padding: 5.5rem 0 2rem; text-align: start; } .hdt-modal-password::part(header) { margin-bottom:3.6rem; } .hdt-modal-password::part(wrapper) { align-items: center; } .hdt-modal-password::part(content) { padding: 3.6rem 3.5rem 4.2rem; } } .dir--rtl .hdt-modal-password .hdt-field label{ left: auto; right: 1.8rem; transform-origin: right top; } @media (-moz-touch-enabled: 0), (hover: hover) and (min-width: 1150px){ .hdt-modal-password::part(close-button):hover{ color: rgb(var(--color-accent)); } }

      /* ===== NEW MODAL STYLES - DO NOT MODIFY ABOVE CSS ===== */

      /* Button styles for opening modal */
      .hdt-password-modal-button {
        background: none;
        border: none;
        cursor: pointer;
        color: inherit;
        text-underline-offset: 0.3rem;
        text-decoration-thickness: 0.1rem;
        transition: text-decoration-thickness ease .1s;
        text-decoration: underline;
        grid-column: 3;
        justify-content: end;
      }

      .hdt-password-modal-button svg {
        width: 1.8rem;
        height: 1.8rem;
        margin-inline-end: 1rem;
      }

      /* Modal Overlay */
      .hdt-password-modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        display: none;
        align-items: center;
        justify-content: center;
      }

      .hdt-password-modal-overlay.show {
        display: flex;
      }

      /* Modal Container */
      .hdt-password-modal-container {
        background: white;
        border-radius: 8px;
        max-width: 62.5rem;
        max-height: 80vh;
        width: 90%;
        position: relative;
        animation: modalSlideIn 0.3s ease-out;
        padding: 3.6rem 3.5rem 4.2rem;
      }

      @keyframes modalSlideIn {
        from {
          opacity: 0;
          transform: translateY(-20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Modal Header */
      .hdt-password-modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 3.6rem;
      }

      .hdt-password-modal-title {
        font-size: 2.8rem;
        margin: 0;
      }

      .hdt-password-modal-close {
        background: none;
        border: none;
        font-size: 3rem;
        cursor: pointer;
        padding: 0;
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #666;
        transition: color 0.2s ease;
      }

      .hdt-password-modal-close:hover {
        color: #000;
      }

      /* Modal Body */
      .hdt-password-modal-body {
        margin-bottom: 1.5rem;
      }

      /* Form Field */
      .hdt-password-form-field {
        position: relative;
        margin-bottom: 3.3rem;
      }

      .hdt-password-form-field label {
        position: absolute;
        left: 1rem;
        top: 1rem;
        color: #666;
        transition: all 0.2s ease;
        pointer-events: none;
        background: white;
        padding: 0 0.25rem;
      }

      .hdt-password-form-field input {
        width: 100%;
        padding: 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1rem;
        outline: none;
        transition: border-color 0.2s ease;
        box-sizing: border-box;
      }

      .hdt-password-form-field input:focus {
        border-color: #000;
      }

      .hdt-password-form-field input:focus + label,
      .hdt-password-form-field input:not(:placeholder-shown) + label {
        top: -0.5rem;
        left: 0.75rem;
        font-size: 0.875rem;
        color: #000;
      }

      .hdt-password-required {
        color: red;
      }

      /* Error Message */
      .hdt-password-error {
        display: flex;
        align-items: center;
        background: rgba(var(--color-error), 0.1);
        border: 1px solid rgb(var(--color-error));
        padding: 1rem;
        border-radius: 4px;
        margin-bottom: 1.5rem;
        color: rgb(var(--color-error));
      }

      .hdt-password-error svg {
        width: 1.3rem;
        height: 1.3rem;
        margin-right: 0.8rem;
        fill: currentColor;
      }

      .hdt-password-error span {
        font-size: 0.9rem;
      }

      /* Input Field */
      .hdt-password-input {
        width: 100%;
        padding: 1rem;
        border: 1px solid rgba(var(--color-foreground), 0.2);
        border-radius: 4px;
        font-size: 1rem;
        outline: none;
        transition: all 0.2s ease;
        background: rgb(var(--color-background));
        color: rgb(var(--color-foreground));
      }

      .hdt-password-input:focus {
        border-color: rgb(var(--color-foreground));
        box-shadow: 0 0 0 1px rgb(var(--color-foreground));
      }

      .hdt-password-input--error {
        border-color: rgb(var(--color-error));
      }

      .hdt-password-input--error:focus {
        border-color: rgb(var(--color-error));
        box-shadow: 0 0 0 1px rgb(var(--color-error));
      }

      /* Submit Button */
      .hdt-password-submit-btn {
        width: 100%;
        background-color: rgb(var(--color-button));
        color: rgb(var(--color-button-text));
        border: none;
        padding: 0.875rem 1.5rem;
        border-radius: 4px;
        font-size: 1.4rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.8rem;
      }

      .hdt-password-submit-btn:hover {
        opacity: 0.9;
      }

      .hdt-password-submit-btn:active {
        transform: scale(0.98);
      }

      .hdt-password-spinner {
        animation: spin 1s linear infinite;
      }

      .hdt-password-spinner svg {
        width: 1.8rem;
        height: 1.8rem;
        fill: currentColor;
      }

      @keyframes spin {
        from {
          transform: rotate(0deg);
        }
        to {
          transform: rotate(360deg);
        }
      }

    @media (min-width: 1150px) {
      .hdt-container {
          max-width: var(--container-max-width-padding-lg);
          padding: 0 5rem;
      }
  }
{%- endstyle -%}
<div class="hdt-s-gradient color-{{ section.settings.color_scheme }} ">
  <div class="hdt-container">
    <div class="hdt-password-header">
      {%- if settings.logo != blank -%}
        {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
        {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
        {{
          settings.logo
          | image_url: width: 500
          | image_tag:
            class: 'hdt-password-logo',
            widths: '50, 100, 150, 200, 250, 300, 400, 500',
            width: section.settings.logo_width,
            height: logo_height,
            alt: logo_alt
        }}
      {%- else -%}
        <h4 class="hdt-text-6xl hdt-font-medium">{{ shop.name }}</h4>
      {%- endif -%}
      {%- if shop.password_message != blank -%}
        <div class="hdt-password-content hdt-text-center">
          {{ shop.password_message }}
        </div>
      {%- endif -%}
      <button class="hdt-password-modal-button hdt-flex hdt-align-center hdt-justify-end" id="open-password-modal">
        <span class="hdt-icon-padlock">
          <svg aria-hidden="true" focusable="false" class="icon icon-padlock" viewBox="0 0 16 21" fill="currentColor">
            <path fill-rule="evenodd" d="M5.03 1.79A3.73 3.73 0 018 .5c1.28 0 2.28.48 2.97 1.29.67.8 1 1.87 1.03 3V7.5h3c.28 0 .5.22.5.5v12a.5.5 0 01-.5.5H1a.5.5 0 01-.5-.5V8c0-.28.22-.5.5-.5h3V4.8c0-1.1.36-2.15 1.03-3.01zM11 6.4v1.09H5V4.82c.03-.99.31-1.82.8-2.4A2.75 2.75 0 018 1.49c1.01 0 1.73.37 2.2.93.49.58.77 1.41.8 2.4V6.4zM1.5 8.49v11h13v-11h-13zm6.51 2.5a1.5 1.5 0 00-.7 2.82v2.5a.68.68 0 001.36 0v-2.47A1.5 1.5 0 008 11l.01-.01z" clip-rule="evenodd" fill="currentColor" />
          </svg>
        </span>
        <span class="hdt-btn-sidebar-text hdt-font-semibold">
          {{- 'general.password_page.login_password_button' | t -}}
        </span>
      </button>
    </div>
  </div>
</div>

<!-- Password Modal -->
<div class="hdt-password-modal-overlay" id="password-modal-overlay">
  <div class="hdt-password-modal-container">
    <div class="hdt-password-modal-header">
      <h2 class="hdt-password-modal-title">Enter password</h2>
      <button class="hdt-password-modal-close" id="close-password-modal" type="button">×</button>
    </div>
    <div class="hdt-password-modal-body">
      {%- form 'storefront_password', class: 'password-form' -%}
        {%- if form.errors -%}
          <div class="mb-4" role="alert">
            {{ form.errors | default_errors }}
          </div>
        {%- endif -%}
        <div class="hdt-password-form-field">
          <input
            type="password"
            name="password"
            id="password"
            class="hdt-password-input {% if form.errors %}hdt-password-input--error{% endif %}"
            autocomplete="current-password"
            placeholder="{{ 'general.password_page.login_form_password_label' | t }} *"
            required
            aria-invalid="{% if form.errors %}true{% else %}false{% endif %}"
            aria-label="{{ 'general.password_page.login_form_password_label' | t }}"
          >
        </div>
        <button type="submit" class="hdt-password-submit-btn">
          <span class="hdt-password-submit-text">{{ 'general.password_page.login_form_submit' | t }}</span>
          <span class="hdt-password-spinner" style="display: none;">
            <svg aria-hidden="true" focusable="false" class="icon icon-spinner" viewBox="0 0 20 20">
              <path d="M7.229 1.173a9.25 9.25 0 1 0 11.655 11.412 1.25 1.25 0 1 0-2.4-.698 6.75 6.75 0 1 1-8.506-8.329 1.25 1.25 0 1 0-.75-2.385z"/>
            </svg>
          </span>
        </button>
      {%- endform -%}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const openModalBtn = document.getElementById('open-password-modal');
    const closeModalBtn = document.getElementById('close-password-modal');
    const modalOverlay = document.getElementById('password-modal-overlay');
    const passwordInput = document.getElementById('password');

    // Open modal
    openModalBtn.addEventListener('click', function () {
      modalOverlay.classList.add('show');
      document.body.style.overflow = 'hidden';
      // Focus on password input after a short delay to ensure modal is visible
      setTimeout(() => {
        passwordInput.focus();
      }, 100);
    });

    // Close modal function
    function closeModal() {
      modalOverlay.classList.remove('show');
      document.body.style.overflow = '';
      passwordInput.value = '';
    }

    // Close modal when clicking close button
    closeModalBtn.addEventListener('click', closeModal);

    // Close modal when clicking outside the modal container
    modalOverlay.addEventListener('click', function (e) {
      if (e.target === modalOverlay) {
        closeModal();
      }
    });

    // Close modal when pressing Escape key
    document.addEventListener('keydown', function (e) {
      if (e.key === 'Escape' && modalOverlay.classList.contains('show')) {
        closeModal();
      }
    });

    // Handle form submission
    const passwordForm = document.querySelector('.password-form');
    const submitButton = document.querySelector('.hdt-password-submit-btn');
    const submitText = document.querySelector('.hdt-password-submit-text');
    const spinner = document.querySelector('.hdt-password-spinner');

    passwordForm.addEventListener('submit', function (e) {
      const password = passwordInput.value.trim();
      if (!password) {
        e.preventDefault();
        passwordInput.focus();
        return false;
      }

      // Show loading state
      submitButton.disabled = true;
      submitText.style.opacity = '0.7';
      spinner.style.display = 'block';
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.main-passwords-header.name",
  "settings": [
    {
      "type": "range",
      "id": "logo_width",
      "min": 50,
      "max": 300,
      "step": 10,
      "default": 100,
      "unit": "px",
      "label": "t:sections.main-passwords-header.settings.logo_width.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    }
  ]
}
{% endschema %}
